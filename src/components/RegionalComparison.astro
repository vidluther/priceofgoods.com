---
const { item, prices, regions } = Astro.props;

const getChangeColor = (change) => {
  if (change > 0) return "text-red-600";
  if (change < 0) return "text-green-600";
  return "text-gray-600";
};

const formatChange = (change) => {
  if (change === null || change === undefined) return "";
  const prefix = change > 0 ? "+" : "";
  return `${prefix}${change.toFixed(2)}`;
};
---

<div class="bg-white rounded-lg shadow-lg p-6">
  <h2 class="text-xl font-semibold mb-6">Average Prices By region </h2>
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
    {Object.entries(regions)
      .filter(([key]) => key !== "national")
      .map(([region, info]) => (
        <div class="p-4 rounded-lg bg-gray-50">
          <div class="flex items-center gap-2 mb-2">
            <svg
              class="w-4 h-4"
              viewBox="0 0 24 24"
              fill="none"
              stroke={info.color}
              stroke-width="2"
            >
              <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
              <circle cx="12" cy="10" r="3" />
            </svg>
            <span class="font-medium">{info.name}</span>
          </div>
          <div class="text-2xl font-bold">
            ${prices[region].current.toFixed(2)}
          </div>
          <div class="text-sm text-gray-600 mt-1">
            As of: {prices[region].latestDate || 'N/A'}
          </div>
          {prices[region].percentChange !== null && (
            <div class="flex flex-col gap-1 mt-2">
              <div class="flex items-center gap-1">
                {prices[region].percentChange > 0 ? (
                  <svg
                    class="text-red-600 w-5 h-5"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                  >
                    <path d="M23 6L13.5 15.5L8.5 10.5L1 18" />
                    <path d="M17 6H23V12" />
                  </svg>
                ) : (
                  <svg
                    class="text-green-600 w-5 h-5"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                  >
                    <path d="M23 18L13.5 8.5L8.5 13.5L1 6" />
                    <path d="M17 18H23V12" />
                  </svg>
                )}
                <span class={getChangeColor(prices[region].percentChange)}>
                  ${formatChange(prices[region].priceChange)}
                </span>
              </div>
              <span class={`${getChangeColor(prices[region].percentChange)} text-sm`}>
                ({formatChange(prices[region].percentChange)}%)
              </span>
            </div>
          )}
        </div>
      ))}
  </div>
</div>
