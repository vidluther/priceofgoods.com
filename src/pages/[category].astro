---
import Layout from "../layouts/Layout.astro";
import CategorySection from '../components/react/CategorySection';
import PriceChart from '../components/react/PriceChart';
import { fetchGoodsConfig } from '../lib/fetchUtils';
import { slugify } from '../lib/stringUtilities';

// Generate all possible category routes
export async function getStaticPaths() {
  const goodsConfig = await fetchGoodsConfig();
  return Object.entries(goodsConfig.categories).map(([key, category]) => ({
    params: { category: slugify(category.name) },
    props: { categoryData: category }
  }));
}

const { category } = Astro.params;
const { categoryData } = Astro.props;

const title = `${categoryData.name} Average Monthly Prices in the US`;
const description = `average price of ${categoryData.name.toLowerCase()} with monthly updates from US Bureau of Labor Statistics data. View trends and changes over time.`;

// Create Dataset structured data for the category
const datasetStructuredData = {
  "@context": "https://schema.org",
  "@type": "Dataset",
  name: `${categoryData.name} Price Statistics Dataset`,
  description: `Comprehensive price statistics and trends for ${categoryData.name.toLowerCase()} in the United States`,
  url: `https://priceofgoods.com/${slugify(categoryData.name)}`,
  keywords: [categoryData.name, "price statistics", "consumer prices", "BLS data", "price trends"],
  creator: {
    "@type": "Organization",
    name: "US Bureau of Labor Statistics",
    url: "https://www.bls.gov"
  },
  publisher: {
    "@type": "Organization",
    name: "Price of Goods",
    url: "https://priceofgoods.com"
  },
  variableMeasured: Object.values(categoryData.items).map(item => ({
    "@type": "PropertyValue",
    name: item.name,
    unitText: item.unit
  })),
  spatialCoverage: "US",
    license: "https://www.bls.gov/opub/opub-rights.htm",
  measurementTechnique: "Statistical Survey",
  dateModified: new Date().toISOString().split('T')[0],
  includedInDataCatalog: {
    "@type": "DataCatalog",
    name: "Price of Goods Statistical Database",
    url: "https://priceofgoods.com"
  }
};

// Create breadcrumb structured data
const breadcrumbData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: "https://priceofgoods.com"
    },
    {
      "@type": "ListItem",
      position: 2,
      name: categoryData.name,
      item: `https://priceofgoods.com/${slugify(categoryData.name)}`
    }
  ]
};
---

<Layout
  title={title}
  description={description}
  ogImage={{
    type: 'categories',
    slug: category
  }}
>
  <!-- Add structured data to head -->
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbData)} />
  <script type="application/ld+json" set:html={JSON.stringify(datasetStructuredData)} />

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center">
      <h1 class="text-3xl font-bold text-gray-900 sm:text-4xl">
        {categoryData.name}
      </h1>
      <p class="mt-3 text-xl text-gray-500 sm:mt-4">
        Current prices and trends
      </p>
    </div>

    <CategorySection
      category={categoryData.name}
      items={categoryData.items}
      client:load
    />

    <div class="mt-12 space-y-12">
      {Object.entries(categoryData.items).map(([key, item]) => (
        <div
          id={item.name.toLowerCase()}
          class="bg-white rounded-lg shadow p-6"
        >
          <h2 class="text-2xl font-bold mb-4">
            Price History for {item.name}
          </h2>
          <PriceChart
            itemKey={item.dataKey}
            item={item}
            client:load
          />
        </div>
      ))}
    </div>
  </div>
</Layout>
