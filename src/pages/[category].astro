---
import Layout from "../layouts/Layout.astro";
import CategorySection from '../components/react/CategorySection';
import PriceChart from '../components/react/PriceChart';
import { fetchGoodsConfig } from '../lib/fetchUtils';
import { slugify } from '../lib/stringUtilities';

// Generate all possible category routes
export async function getStaticPaths() {
  const goodsConfig = await fetchGoodsConfig();
  return Object.entries(goodsConfig.categories).map(([key, category]) => ({
    params: { category: slugify(category.name) },
    props: { categoryData: category }
  }));
}

const { category } = Astro.params;
const { categoryData } = Astro.props;

const title = `${categoryData.name} Average Monthly Prices in the US`;
const description = `average price of ${categoryData.name.toLowerCase()} with monthly updates from US Bureau of Labor Statistics data. View trends and changes over time.`;

// Create breadcrumb structured data
const breadcrumbData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: "https://priceofgoods.com"
    },
    {
      "@type": "ListItem",
      position: 2,
      name: categoryData.name,
      item: `https://priceofgoods.com/${slugify(categoryData.name)}`
    }
  ]
};

// Create ItemList structured data for the category's products
const itemListData = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  name: `${categoryData.name} Price Tracking`,
  description: `Current prices and historical trends for ${categoryData.name.toLowerCase()} in the United States`,
  numberOfItems: Object.keys(categoryData.items).length,
  itemListElement: Object.entries(categoryData.items).map(([key, item], index) => ({
    "@type": "ListItem",
    position: index + 1,
    item: {
      "@type": "Product",
      name: item.name,
      description: `Track ${item.name.toLowerCase()} prices per ${item.unit}`,
      url: `https://priceofgoods.com/${slugify(item.name)}`,
      additionalProperty: [
        {
          "@type": "PropertyValue",
          name: "unit",
          value: item.unit
        },
        {
          "@type": "PropertyValue",
          name: "category",
          value: categoryData.name
        }
      ]
    }
  }))
};

// Create Dataset structured data for the category
const datasetData = {
  "@context": "https://schema.org",
  "@type": "Dataset",
  name: `${categoryData.name} Price Statistics`,
  description: `Historical price data for ${categoryData.name.toLowerCase()} products from the US Bureau of Labor Statistics`,
  creator: {
    "@type": "Organization",
    name: "US Bureau of Labor Statistics"
  },
  includedInDataCatalog: {
    "@type": "DataCatalog",
    name: "Price of Goods"
  },
  distribution: {
    "@type": "DataDownload",
    encodingFormat: "JSON",
    contentUrl: `https://priceofgoods.com/api/categories/${slugify(categoryData.name)}`
  },
  temporalCoverage: "P10Y", // Indicates 10 years of historical data
  spatialCoverage: {
    "@type": "Country",
    name: "United States"
  }
};
---

<Layout
  title={title}
  description={description}
  ogImage={{
    type: 'categories',
    slug: category
  }}
>
  <!-- Add structured data to head -->
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbData)} />
  <script type="application/ld+json" set:html={JSON.stringify(itemListData)} />
  <script type="application/ld+json" set:html={JSON.stringify(datasetData)} />

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center">
      <h1 class="text-3xl font-bold text-gray-900 sm:text-4xl">
        {categoryData.name}
      </h1>
      <p class="mt-3 text-xl text-gray-500 sm:mt-4">
        Current prices and trends
      </p>
    </div>

    <CategorySection
      category={categoryData.name}
      items={categoryData.items}
      client:load
    />

    <div class="mt-12 space-y-12">
      {Object.entries(categoryData.items).map(([key, item]) => (
        <div
          id={item.name.toLowerCase()}
          class="bg-white rounded-lg shadow p-6"
        >
          <h2 class="text-2xl font-bold mb-4">
            Price History for {item.name}
          </h2>
          <PriceChart
            itemKey={item.dataKey}
            item={item}
            client:load
          />
        </div>
      ))}
    </div>
  </div>
</Layout>
