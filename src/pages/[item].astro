---
import Layout from "../layouts/Layout.astro";

import remarkGfm from 'remark-gfm';
import { marked } from 'marked';

import { fetchGoodsConfig } from '../lib/fetchUtils';
import { processItemData, regions } from '../lib/dataUtils';
import { slugify } from '../lib/stringUtilities';
import RegionalComparison from '../components/RegionalComparison.astro';
import PriceHistoryChart from '../components/react/PriceHistoryChart';
import { analyzeItemPrices } from '../lib/priceanalysis';
import ItemDetailPage from "../components/react/ItemDetailPage";

// Generate all possible item routes
export async function getStaticPaths() {
  const goodsConfig = await fetchGoodsConfig();
  const allItems = Object.values(goodsConfig.categories).reduce((items, category) => {
    return {
      ...items,
      ...category.items
    };
  }, {});

  const paths = await Promise.all(
    Object.values(allItems).map(async (item) => {
      const itemData = await processItemData(item.dataKey);
      return {
        params: { item: slugify(item.name) },
        props: {
          itemInfo: item,
          itemData
        }
      };
    })
  );
  return paths;
}

const { item } = Astro.params;
const { itemInfo, itemData } = Astro.props;

const title = `Average Price of ${itemInfo.name} per ${itemInfo.unit}`;
const description = `${itemInfo.name.toLowerCase()} prices from monthly US Bureau of Labor Statistics reports. View 1-year, 4-year, and 20-year historical price trends, with official national and regional averages.`;
const useAnthropic = false;
const analysis = await analyzeItemPrices(itemInfo, useAnthropic);
const aiAnalysis = marked.parse(analysis, {
  breaks: true
});

// Create JSON-LD structured data for the price dataset.
const datasetStructuredData = {
  "@context": "https://schema.org",
  "@type": "Dataset",
  name: `${itemInfo.name} Price Statistics`,
  description: `Historical and current average prices for ${itemInfo.name} in the United States, measured per ${itemInfo.unit}`,
  keywords: [itemInfo.name, "price statistics", "consumer prices", "BLS data", "price trends"],
  url: `https://priceofgoods.com/${slugify(itemInfo.name)}`,
  creator: {
    "@type": "Organization",
    name: "US Bureau of Labor Statistics",
    url: "https://www.bls.gov"
  },
  publisher: {
    "@type": "Organization",
    name: "Price of Goods",
    url: "https://priceofgoods.com"
  },
  temporalCoverage: itemData.history.length > 0
    ? `${itemData.history[0].date}/${itemData.history[itemData.history.length - 1].date}`
    : "",
  spatialCoverage: "US",
  license: "https://www.bls.gov/opub/opub-rights.htm",
  variableMeasured: [
    {
      "@type": "PropertyValue",
      name: "price",
      unitText: itemInfo.unit,
      valueReference: {
        "@type": "PropertyValue",
        name: "Current National Average",
        value: itemData.currentPrices.national.current,
        unitText: "USD"
      }
    }
  ],
  measurementTechnique: "Statistical Survey",
  dateModified: new Date().toISOString().split('T')[0]
};

// Create breadcrumb structured data.
const breadcrumbData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: "https://priceofgoods.com"
    },
    {
      "@type": "ListItem",
      position: 2,
      name: itemInfo.name,
      item: `https://priceofgoods.com/${slugify(itemInfo.name)}`
    }
  ]
};

---

<Layout
  title={title}
  description={description}
  ogImage={{
    type: 'items',
    slug: itemInfo.dataKey
  }}
>
  <!-- Add structured data to head -->
  <script type="application/ld+json" set:html={JSON.stringify(datasetStructuredData)} />
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbData)} />
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <ItemDetailPage
      item={itemInfo}
      currentPrices={itemData.currentPrices}
      historyData={itemData.history}
      aiAnalysis={aiAnalysis}
      client:load
    />
  </Layout>
  </div>
</Layout>
